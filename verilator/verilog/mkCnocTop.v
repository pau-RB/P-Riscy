//
// Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
//
// timestamp removed
//
// BVI format method schedule info:
// schedule requests_0_id  CF ( requests_0_id,
// 			     requests_0_message_enq,
// 			     requests_0_message_notFull,
// 			     indications_0_id,
// 			     indications_0_message_first,
// 			     indications_0_message_deq,
// 			     indications_0_message_notEmpty,
// 			     readers_0_readReq_get,
// 			     readers_0_readData_put,
// 			     readers_1_readReq_get,
// 			     readers_1_readData_put,
// 			     writers_0_writeReq_get,
// 			     writers_0_writeData_get,
// 			     writers_0_writeDone_put,
// 			     writers_1_writeReq_get,
// 			     writers_1_writeData_get,
// 			     writers_1_writeDone_put );
//
// schedule requests_0_message_enq  CF ( requests_0_id,
// 				      indications_0_id,
// 				      indications_0_message_first,
// 				      indications_0_message_deq,
// 				      indications_0_message_notEmpty,
// 				      readers_0_readReq_get,
// 				      readers_0_readData_put,
// 				      readers_1_readReq_get,
// 				      readers_1_readData_put,
// 				      writers_0_writeReq_get,
// 				      writers_0_writeData_get,
// 				      writers_0_writeDone_put,
// 				      writers_1_writeReq_get,
// 				      writers_1_writeData_get,
// 				      writers_1_writeDone_put );
// schedule requests_0_message_enq  C ( requests_0_message_enq );
//
// schedule requests_0_message_notFull  CF ( requests_0_id,
// 					  requests_0_message_notFull,
// 					  indications_0_id,
// 					  indications_0_message_first,
// 					  indications_0_message_deq,
// 					  indications_0_message_notEmpty,
// 					  readers_0_readReq_get,
// 					  readers_0_readData_put,
// 					  readers_1_readReq_get,
// 					  readers_1_readData_put,
// 					  writers_0_writeReq_get,
// 					  writers_0_writeData_get,
// 					  writers_0_writeDone_put,
// 					  writers_1_writeReq_get,
// 					  writers_1_writeData_get,
// 					  writers_1_writeDone_put );
// schedule requests_0_message_notFull  SB ( requests_0_message_enq );
//
// schedule indications_0_id  CF ( requests_0_id,
// 				requests_0_message_enq,
// 				requests_0_message_notFull,
// 				indications_0_id,
// 				indications_0_message_first,
// 				indications_0_message_deq,
// 				indications_0_message_notEmpty,
// 				readers_0_readReq_get,
// 				readers_0_readData_put,
// 				readers_1_readReq_get,
// 				readers_1_readData_put,
// 				writers_0_writeReq_get,
// 				writers_0_writeData_get,
// 				writers_0_writeDone_put,
// 				writers_1_writeReq_get,
// 				writers_1_writeData_get,
// 				writers_1_writeDone_put );
//
// schedule indications_0_message_first  CF ( requests_0_id,
// 					   requests_0_message_enq,
// 					   requests_0_message_notFull,
// 					   indications_0_id,
// 					   indications_0_message_first,
// 					   indications_0_message_notEmpty,
// 					   readers_0_readReq_get,
// 					   readers_0_readData_put,
// 					   readers_1_readReq_get,
// 					   readers_1_readData_put,
// 					   writers_0_writeReq_get,
// 					   writers_0_writeData_get,
// 					   writers_0_writeDone_put,
// 					   writers_1_writeReq_get,
// 					   writers_1_writeData_get,
// 					   writers_1_writeDone_put );
// schedule indications_0_message_first  SB ( indications_0_message_deq );
//
// schedule indications_0_message_deq  CF ( requests_0_id,
// 					 requests_0_message_enq,
// 					 requests_0_message_notFull,
// 					 indications_0_id,
// 					 readers_0_readReq_get,
// 					 readers_0_readData_put,
// 					 readers_1_readReq_get,
// 					 readers_1_readData_put,
// 					 writers_0_writeReq_get,
// 					 writers_0_writeData_get,
// 					 writers_0_writeDone_put,
// 					 writers_1_writeReq_get,
// 					 writers_1_writeData_get,
// 					 writers_1_writeDone_put );
// schedule indications_0_message_deq  C ( indications_0_message_deq );
//
// schedule indications_0_message_notEmpty  CF ( requests_0_id,
// 					      requests_0_message_enq,
// 					      requests_0_message_notFull,
// 					      indications_0_id,
// 					      indications_0_message_first,
// 					      indications_0_message_notEmpty,
// 					      readers_0_readReq_get,
// 					      readers_0_readData_put,
// 					      readers_1_readReq_get,
// 					      readers_1_readData_put,
// 					      writers_0_writeReq_get,
// 					      writers_0_writeData_get,
// 					      writers_0_writeDone_put,
// 					      writers_1_writeReq_get,
// 					      writers_1_writeData_get,
// 					      writers_1_writeDone_put );
// schedule indications_0_message_notEmpty  SB ( indications_0_message_deq );
//
// schedule readers_0_readReq_get  CF ( requests_0_id,
// 				     requests_0_message_enq,
// 				     requests_0_message_notFull,
// 				     indications_0_id,
// 				     indications_0_message_first,
// 				     indications_0_message_deq,
// 				     indications_0_message_notEmpty,
// 				     readers_0_readReq_get,
// 				     readers_0_readData_put,
// 				     readers_1_readReq_get,
// 				     readers_1_readData_put,
// 				     writers_0_writeReq_get,
// 				     writers_0_writeData_get,
// 				     writers_0_writeDone_put,
// 				     writers_1_writeReq_get,
// 				     writers_1_writeData_get,
// 				     writers_1_writeDone_put );
//
// schedule readers_0_readData_put  CF ( requests_0_id,
// 				      requests_0_message_enq,
// 				      requests_0_message_notFull,
// 				      indications_0_id,
// 				      indications_0_message_first,
// 				      indications_0_message_deq,
// 				      indications_0_message_notEmpty,
// 				      readers_0_readReq_get,
// 				      readers_0_readData_put,
// 				      readers_1_readReq_get,
// 				      readers_1_readData_put,
// 				      writers_0_writeReq_get,
// 				      writers_0_writeData_get,
// 				      writers_0_writeDone_put,
// 				      writers_1_writeReq_get,
// 				      writers_1_writeData_get,
// 				      writers_1_writeDone_put );
//
// schedule readers_1_readReq_get  CF ( requests_0_id,
// 				     requests_0_message_enq,
// 				     requests_0_message_notFull,
// 				     indications_0_id,
// 				     indications_0_message_first,
// 				     indications_0_message_deq,
// 				     indications_0_message_notEmpty,
// 				     readers_0_readReq_get,
// 				     readers_0_readData_put,
// 				     readers_1_readReq_get,
// 				     readers_1_readData_put,
// 				     writers_0_writeReq_get,
// 				     writers_0_writeData_get,
// 				     writers_0_writeDone_put,
// 				     writers_1_writeReq_get,
// 				     writers_1_writeData_get,
// 				     writers_1_writeDone_put );
//
// schedule readers_1_readData_put  CF ( requests_0_id,
// 				      requests_0_message_enq,
// 				      requests_0_message_notFull,
// 				      indications_0_id,
// 				      indications_0_message_first,
// 				      indications_0_message_deq,
// 				      indications_0_message_notEmpty,
// 				      readers_0_readReq_get,
// 				      readers_0_readData_put,
// 				      readers_1_readReq_get,
// 				      readers_1_readData_put,
// 				      writers_0_writeReq_get,
// 				      writers_0_writeData_get,
// 				      writers_0_writeDone_put,
// 				      writers_1_writeReq_get,
// 				      writers_1_writeData_get,
// 				      writers_1_writeDone_put );
//
// schedule writers_0_writeReq_get  CF ( requests_0_id,
// 				      requests_0_message_enq,
// 				      requests_0_message_notFull,
// 				      indications_0_id,
// 				      indications_0_message_first,
// 				      indications_0_message_deq,
// 				      indications_0_message_notEmpty,
// 				      readers_0_readReq_get,
// 				      readers_0_readData_put,
// 				      readers_1_readReq_get,
// 				      readers_1_readData_put,
// 				      writers_0_writeReq_get,
// 				      writers_0_writeData_get,
// 				      writers_0_writeDone_put,
// 				      writers_1_writeReq_get,
// 				      writers_1_writeData_get,
// 				      writers_1_writeDone_put );
//
// schedule writers_0_writeData_get  CF ( requests_0_id,
// 				       requests_0_message_enq,
// 				       requests_0_message_notFull,
// 				       indications_0_id,
// 				       indications_0_message_first,
// 				       indications_0_message_deq,
// 				       indications_0_message_notEmpty,
// 				       readers_0_readReq_get,
// 				       readers_0_readData_put,
// 				       readers_1_readReq_get,
// 				       readers_1_readData_put,
// 				       writers_0_writeReq_get,
// 				       writers_0_writeData_get,
// 				       writers_0_writeDone_put,
// 				       writers_1_writeReq_get,
// 				       writers_1_writeData_get,
// 				       writers_1_writeDone_put );
//
// schedule writers_0_writeDone_put  CF ( requests_0_id,
// 				       requests_0_message_enq,
// 				       requests_0_message_notFull,
// 				       indications_0_id,
// 				       indications_0_message_first,
// 				       indications_0_message_deq,
// 				       indications_0_message_notEmpty,
// 				       readers_0_readReq_get,
// 				       readers_0_readData_put,
// 				       readers_1_readReq_get,
// 				       readers_1_readData_put,
// 				       writers_0_writeReq_get,
// 				       writers_0_writeData_get,
// 				       writers_0_writeDone_put,
// 				       writers_1_writeReq_get,
// 				       writers_1_writeData_get,
// 				       writers_1_writeDone_put );
//
// schedule writers_1_writeReq_get  CF ( requests_0_id,
// 				      requests_0_message_enq,
// 				      requests_0_message_notFull,
// 				      indications_0_id,
// 				      indications_0_message_first,
// 				      indications_0_message_deq,
// 				      indications_0_message_notEmpty,
// 				      readers_0_readReq_get,
// 				      readers_0_readData_put,
// 				      readers_1_readReq_get,
// 				      readers_1_readData_put,
// 				      writers_0_writeReq_get,
// 				      writers_0_writeData_get,
// 				      writers_0_writeDone_put,
// 				      writers_1_writeReq_get,
// 				      writers_1_writeData_get,
// 				      writers_1_writeDone_put );
//
// schedule writers_1_writeData_get  CF ( requests_0_id,
// 				       requests_0_message_enq,
// 				       requests_0_message_notFull,
// 				       indications_0_id,
// 				       indications_0_message_first,
// 				       indications_0_message_deq,
// 				       indications_0_message_notEmpty,
// 				       readers_0_readReq_get,
// 				       readers_0_readData_put,
// 				       readers_1_readReq_get,
// 				       readers_1_readData_put,
// 				       writers_0_writeReq_get,
// 				       writers_0_writeData_get,
// 				       writers_0_writeDone_put,
// 				       writers_1_writeReq_get,
// 				       writers_1_writeData_get,
// 				       writers_1_writeDone_put );
//
// schedule writers_1_writeDone_put  CF ( requests_0_id,
// 				       requests_0_message_enq,
// 				       requests_0_message_notFull,
// 				       indications_0_id,
// 				       indications_0_message_first,
// 				       indications_0_message_deq,
// 				       indications_0_message_notEmpty,
// 				       readers_0_readReq_get,
// 				       readers_0_readData_put,
// 				       readers_1_readReq_get,
// 				       readers_1_readData_put,
// 				       writers_0_writeReq_get,
// 				       writers_0_writeData_get,
// 				       writers_0_writeDone_put,
// 				       writers_1_writeReq_get,
// 				       writers_1_writeData_get,
// 				       writers_1_writeDone_put );
//
//
// Ports:
// Name                         I/O  size props
// requests_0_id                  O    32 const
// RDY_requests_0_id              O     1 const
// RDY_requests_0_message_enq     O     1 reg
// requests_0_message_notFull     O     1 reg
// RDY_requests_0_message_notFull  O     1 const
// indications_0_id               O    32 const
// RDY_indications_0_id           O     1 const
// indications_0_message_first    O    32 reg
// RDY_indications_0_message_first  O     1 reg
// RDY_indications_0_message_deq  O     1 reg
// indications_0_message_notEmpty  O     1 reg
// RDY_indications_0_message_notEmpty  O     1 const
// readers_0_readReq_get          O    88 const
// RDY_readers_0_readReq_get      O     1 const
// RDY_readers_0_readData_put     O     1 const
// readers_1_readReq_get          O    88 const
// RDY_readers_1_readReq_get      O     1 const
// RDY_readers_1_readData_put     O     1 const
// writers_0_writeReq_get         O    88 const
// RDY_writers_0_writeReq_get     O     1 const
// writers_0_writeData_get        O    71 const
// RDY_writers_0_writeData_get    O     1 const
// RDY_writers_0_writeDone_put    O     1 const
// writers_1_writeReq_get         O    88 const
// RDY_writers_1_writeReq_get     O     1 const
// writers_1_writeData_get        O    71 const
// RDY_writers_1_writeData_get    O     1 const
// RDY_writers_1_writeDone_put    O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// requests_0_message_enq_v       I    32 reg
// readers_0_readData_put         I    71 unused
// readers_1_readData_put         I    71 unused
// writers_0_writeDone_put        I     6 unused
// writers_1_writeDone_put        I     6 unused
// EN_requests_0_message_enq      I     1
// EN_indications_0_message_deq   I     1
// EN_readers_0_readData_put      I     1 unused
// EN_readers_1_readData_put      I     1 unused
// EN_writers_0_writeDone_put     I     1 unused
// EN_writers_1_writeDone_put     I     1 unused
// EN_readers_0_readReq_get       I     1 unused
// EN_readers_1_readReq_get       I     1 unused
// EN_writers_0_writeReq_get      I     1 unused
// EN_writers_0_writeData_get     I     1 unused
// EN_writers_1_writeReq_get      I     1 unused
// EN_writers_1_writeData_get     I     1 unused
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkCnocTop(CLK,
		 RST_N,

		 requests_0_id,
		 RDY_requests_0_id,

		 requests_0_message_enq_v,
		 EN_requests_0_message_enq,
		 RDY_requests_0_message_enq,

		 requests_0_message_notFull,
		 RDY_requests_0_message_notFull,

		 indications_0_id,
		 RDY_indications_0_id,

		 indications_0_message_first,
		 RDY_indications_0_message_first,

		 EN_indications_0_message_deq,
		 RDY_indications_0_message_deq,

		 indications_0_message_notEmpty,
		 RDY_indications_0_message_notEmpty,

		 EN_readers_0_readReq_get,
		 readers_0_readReq_get,
		 RDY_readers_0_readReq_get,

		 readers_0_readData_put,
		 EN_readers_0_readData_put,
		 RDY_readers_0_readData_put,

		 EN_readers_1_readReq_get,
		 readers_1_readReq_get,
		 RDY_readers_1_readReq_get,

		 readers_1_readData_put,
		 EN_readers_1_readData_put,
		 RDY_readers_1_readData_put,

		 EN_writers_0_writeReq_get,
		 writers_0_writeReq_get,
		 RDY_writers_0_writeReq_get,

		 EN_writers_0_writeData_get,
		 writers_0_writeData_get,
		 RDY_writers_0_writeData_get,

		 writers_0_writeDone_put,
		 EN_writers_0_writeDone_put,
		 RDY_writers_0_writeDone_put,

		 EN_writers_1_writeReq_get,
		 writers_1_writeReq_get,
		 RDY_writers_1_writeReq_get,

		 EN_writers_1_writeData_get,
		 writers_1_writeData_get,
		 RDY_writers_1_writeData_get,

		 writers_1_writeDone_put,
		 EN_writers_1_writeDone_put,
		 RDY_writers_1_writeDone_put);
  input  CLK;
  input  RST_N;

  // value method requests_0_id
  output [31 : 0] requests_0_id;
  output RDY_requests_0_id;

  // action method requests_0_message_enq
  input  [31 : 0] requests_0_message_enq_v;
  input  EN_requests_0_message_enq;
  output RDY_requests_0_message_enq;

  // value method requests_0_message_notFull
  output requests_0_message_notFull;
  output RDY_requests_0_message_notFull;

  // value method indications_0_id
  output [31 : 0] indications_0_id;
  output RDY_indications_0_id;

  // value method indications_0_message_first
  output [31 : 0] indications_0_message_first;
  output RDY_indications_0_message_first;

  // action method indications_0_message_deq
  input  EN_indications_0_message_deq;
  output RDY_indications_0_message_deq;

  // value method indications_0_message_notEmpty
  output indications_0_message_notEmpty;
  output RDY_indications_0_message_notEmpty;

  // actionvalue method readers_0_readReq_get
  input  EN_readers_0_readReq_get;
  output [87 : 0] readers_0_readReq_get;
  output RDY_readers_0_readReq_get;

  // action method readers_0_readData_put
  input  [70 : 0] readers_0_readData_put;
  input  EN_readers_0_readData_put;
  output RDY_readers_0_readData_put;

  // actionvalue method readers_1_readReq_get
  input  EN_readers_1_readReq_get;
  output [87 : 0] readers_1_readReq_get;
  output RDY_readers_1_readReq_get;

  // action method readers_1_readData_put
  input  [70 : 0] readers_1_readData_put;
  input  EN_readers_1_readData_put;
  output RDY_readers_1_readData_put;

  // actionvalue method writers_0_writeReq_get
  input  EN_writers_0_writeReq_get;
  output [87 : 0] writers_0_writeReq_get;
  output RDY_writers_0_writeReq_get;

  // actionvalue method writers_0_writeData_get
  input  EN_writers_0_writeData_get;
  output [70 : 0] writers_0_writeData_get;
  output RDY_writers_0_writeData_get;

  // action method writers_0_writeDone_put
  input  [5 : 0] writers_0_writeDone_put;
  input  EN_writers_0_writeDone_put;
  output RDY_writers_0_writeDone_put;

  // actionvalue method writers_1_writeReq_get
  input  EN_writers_1_writeReq_get;
  output [87 : 0] writers_1_writeReq_get;
  output RDY_writers_1_writeReq_get;

  // actionvalue method writers_1_writeData_get
  input  EN_writers_1_writeData_get;
  output [70 : 0] writers_1_writeData_get;
  output RDY_writers_1_writeData_get;

  // action method writers_1_writeDone_put
  input  [5 : 0] writers_1_writeDone_put;
  input  EN_writers_1_writeDone_put;
  output RDY_writers_1_writeDone_put;

  // signals for module outputs
  wire [87 : 0] readers_0_readReq_get,
		readers_1_readReq_get,
		writers_0_writeReq_get,
		writers_1_writeReq_get;
  wire [70 : 0] writers_0_writeData_get, writers_1_writeData_get;
  wire [31 : 0] indications_0_id, indications_0_message_first, requests_0_id;
  wire RDY_indications_0_id,
       RDY_indications_0_message_deq,
       RDY_indications_0_message_first,
       RDY_indications_0_message_notEmpty,
       RDY_readers_0_readData_put,
       RDY_readers_0_readReq_get,
       RDY_readers_1_readData_put,
       RDY_readers_1_readReq_get,
       RDY_requests_0_id,
       RDY_requests_0_message_enq,
       RDY_requests_0_message_notFull,
       RDY_writers_0_writeData_get,
       RDY_writers_0_writeDone_put,
       RDY_writers_0_writeReq_get,
       RDY_writers_1_writeData_get,
       RDY_writers_1_writeDone_put,
       RDY_writers_1_writeReq_get,
       indications_0_message_notEmpty,
       requests_0_message_notFull;

  // register lFromHostInputNoc_bpState
  reg lFromHostInputNoc_bpState;
  wire lFromHostInputNoc_bpState_D_IN, lFromHostInputNoc_bpState_EN;

  // register lFromHostInputNoc_messageWordsReg
  reg [7 : 0] lFromHostInputNoc_messageWordsReg;
  wire [7 : 0] lFromHostInputNoc_messageWordsReg_D_IN;
  wire lFromHostInputNoc_messageWordsReg_EN;

  // register lFromHostInputNoc_methodIdReg
  reg [7 : 0] lFromHostInputNoc_methodIdReg;
  wire [7 : 0] lFromHostInputNoc_methodIdReg_D_IN;
  wire lFromHostInputNoc_methodIdReg_EN;

  // register lToHostOutputNoc_bpState
  reg lToHostOutputNoc_bpState;
  wire lToHostOutputNoc_bpState_D_IN, lToHostOutputNoc_bpState_EN;

  // register lToHostOutputNoc_messageWordsReg
  reg [15 : 0] lToHostOutputNoc_messageWordsReg;
  wire [15 : 0] lToHostOutputNoc_messageWordsReg_D_IN;
  wire lToHostOutputNoc_messageWordsReg_EN;

  // register lToHostOutputNoc_methodIdReg
  reg [7 : 0] lToHostOutputNoc_methodIdReg;
  wire [7 : 0] lToHostOutputNoc_methodIdReg_D_IN;
  wire lToHostOutputNoc_methodIdReg_EN;

  // ports of submodule lFromHostInput
  wire [31 : 0] lFromHostInput_portalIfc_requests_0_enq_v;
  wire [15 : 0] lFromHostInput_portalIfc_messageSize_size_methodNumber;
  wire lFromHostInput_EN_pipes_startPC_PipeOut_deq,
       lFromHostInput_EN_portalIfc_requests_0_enq,
       lFromHostInput_RDY_pipes_startPC_PipeOut_deq,
       lFromHostInput_RDY_portalIfc_requests_0_enq;

  // ports of submodule lFromHostInputNoc_fifoMsgSink
  wire [31 : 0] lFromHostInputNoc_fifoMsgSink_D_IN,
		lFromHostInputNoc_fifoMsgSink_D_OUT;
  wire lFromHostInputNoc_fifoMsgSink_CLR,
       lFromHostInputNoc_fifoMsgSink_DEQ,
       lFromHostInputNoc_fifoMsgSink_EMPTY_N,
       lFromHostInputNoc_fifoMsgSink_ENQ,
       lFromHostInputNoc_fifoMsgSink_FULL_N;

  // ports of submodule lToHostOutput
  wire [31 : 0] lToHostOutput_ifc_print_word,
		lToHostOutput_portalIfc_indications_0_first;
  wire [15 : 0] lToHostOutput_portalIfc_messageSize_size,
		lToHostOutput_portalIfc_messageSize_size_methodNumber;
  wire lToHostOutput_EN_ifc_print,
       lToHostOutput_EN_portalIfc_indications_0_deq,
       lToHostOutput_RDY_portalIfc_indications_0_deq,
       lToHostOutput_RDY_portalIfc_indications_0_first,
       lToHostOutput_portalIfc_indications_0_notEmpty;

  // ports of submodule lToHostOutputNoc_fifoMsgSource
  wire [31 : 0] lToHostOutputNoc_fifoMsgSource_D_IN,
		lToHostOutputNoc_fifoMsgSource_D_OUT;
  wire lToHostOutputNoc_fifoMsgSource_CLR,
       lToHostOutputNoc_fifoMsgSource_DEQ,
       lToHostOutputNoc_fifoMsgSource_EMPTY_N,
       lToHostOutputNoc_fifoMsgSource_ENQ,
       lToHostOutputNoc_fifoMsgSource_FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_lFromHostInputNoc_receiveMessage,
       WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader,
       WILL_FIRE_RL_lToHostOutputNoc_sendHeader,
       WILL_FIRE_RL_lToHostOutputNoc_sendMessage;

  // inputs to muxes for submodule ports
  wire [31 : 0] MUX_lToHostOutputNoc_fifoMsgSource_enq_1__VAL_1;
  wire [15 : 0] MUX_lToHostOutputNoc_messageWordsReg_write_1__VAL_2;
  wire [7 : 0] MUX_lFromHostInputNoc_messageWordsReg_write_1__VAL_2;
  wire MUX_lFromHostInputNoc_bpState_write_1__SEL_1,
       MUX_lToHostOutputNoc_bpState_write_1__SEL_1;

  // remaining internal signals
  wire [15 : 0] methodNumber__h792, numWords__h748, roundup__h747, x__h902;
  wire [7 : 0] _theResult____h1407, messageWords__h1406, readyChannel__h555;

  // value method requests_0_id
  assign requests_0_id = 32'd6 ;
  assign RDY_requests_0_id = 1'd1 ;

  // action method requests_0_message_enq
  assign RDY_requests_0_message_enq = lFromHostInputNoc_fifoMsgSink_FULL_N ;

  // value method requests_0_message_notFull
  assign requests_0_message_notFull = lFromHostInputNoc_fifoMsgSink_FULL_N ;
  assign RDY_requests_0_message_notFull = 1'd1 ;

  // value method indications_0_id
  assign indications_0_id = 32'd5 ;
  assign RDY_indications_0_id = 1'd1 ;

  // value method indications_0_message_first
  assign indications_0_message_first = lToHostOutputNoc_fifoMsgSource_D_OUT ;
  assign RDY_indications_0_message_first =
	     lToHostOutputNoc_fifoMsgSource_EMPTY_N ;

  // action method indications_0_message_deq
  assign RDY_indications_0_message_deq =
	     lToHostOutputNoc_fifoMsgSource_EMPTY_N ;

  // value method indications_0_message_notEmpty
  assign indications_0_message_notEmpty =
	     lToHostOutputNoc_fifoMsgSource_EMPTY_N ;
  assign RDY_indications_0_message_notEmpty = 1'd1 ;

  // actionvalue method readers_0_readReq_get
  assign readers_0_readReq_get = 88'hAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_readers_0_readReq_get = 1'd0 ;

  // action method readers_0_readData_put
  assign RDY_readers_0_readData_put = 1'd0 ;

  // actionvalue method readers_1_readReq_get
  assign readers_1_readReq_get = 88'hAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_readers_1_readReq_get = 1'd0 ;

  // action method readers_1_readData_put
  assign RDY_readers_1_readData_put = 1'd0 ;

  // actionvalue method writers_0_writeReq_get
  assign writers_0_writeReq_get = 88'hAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_writers_0_writeReq_get = 1'd0 ;

  // actionvalue method writers_0_writeData_get
  assign writers_0_writeData_get = 71'h2AAAAAAAAAAAAAAAAA ;
  assign RDY_writers_0_writeData_get = 1'd0 ;

  // action method writers_0_writeDone_put
  assign RDY_writers_0_writeDone_put = 1'd0 ;

  // actionvalue method writers_1_writeReq_get
  assign writers_1_writeReq_get = 88'hAAAAAAAAAAAAAAAAAAAAAA ;
  assign RDY_writers_1_writeReq_get = 1'd0 ;

  // actionvalue method writers_1_writeData_get
  assign writers_1_writeData_get = 71'h2AAAAAAAAAAAAAAAAA ;
  assign RDY_writers_1_writeData_get = 1'd0 ;

  // action method writers_1_writeDone_put
  assign RDY_writers_1_writeDone_put = 1'd0 ;

  // submodule lFromHostInput
  mkFromHostInput lFromHostInput(.CLK(CLK),
				 .RST_N(RST_N),
				 .portalIfc_messageSize_size_methodNumber(lFromHostInput_portalIfc_messageSize_size_methodNumber),
				 .portalIfc_requests_0_enq_v(lFromHostInput_portalIfc_requests_0_enq_v),
				 .EN_portalIfc_requests_0_enq(lFromHostInput_EN_portalIfc_requests_0_enq),
				 .EN_pipes_startPC_PipeOut_deq(lFromHostInput_EN_pipes_startPC_PipeOut_deq),
				 .portalIfc_messageSize_size(),
				 .RDY_portalIfc_messageSize_size(),
				 .RDY_portalIfc_requests_0_enq(lFromHostInput_RDY_portalIfc_requests_0_enq),
				 .portalIfc_requests_0_notFull(),
				 .RDY_portalIfc_requests_0_notFull(),
				 .portalIfc_intr_status(),
				 .RDY_portalIfc_intr_status(),
				 .portalIfc_intr_channel(),
				 .RDY_portalIfc_intr_channel(),
				 .pipes_startPC_PipeOut_first(),
				 .RDY_pipes_startPC_PipeOut_first(),
				 .RDY_pipes_startPC_PipeOut_deq(lFromHostInput_RDY_pipes_startPC_PipeOut_deq),
				 .pipes_startPC_PipeOut_notEmpty(),
				 .RDY_pipes_startPC_PipeOut_notEmpty());

  // submodule lFromHostInputNoc_fifoMsgSink
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) lFromHostInputNoc_fifoMsgSink(.RST(RST_N),
							.CLK(CLK),
							.D_IN(lFromHostInputNoc_fifoMsgSink_D_IN),
							.ENQ(lFromHostInputNoc_fifoMsgSink_ENQ),
							.DEQ(lFromHostInputNoc_fifoMsgSink_DEQ),
							.CLR(lFromHostInputNoc_fifoMsgSink_CLR),
							.D_OUT(lFromHostInputNoc_fifoMsgSink_D_OUT),
							.FULL_N(lFromHostInputNoc_fifoMsgSink_FULL_N),
							.EMPTY_N(lFromHostInputNoc_fifoMsgSink_EMPTY_N));

  // submodule lToHostOutput
  mkToHostOutput lToHostOutput(.CLK(CLK),
			       .RST_N(RST_N),
			       .ifc_print_word(lToHostOutput_ifc_print_word),
			       .portalIfc_messageSize_size_methodNumber(lToHostOutput_portalIfc_messageSize_size_methodNumber),
			       .EN_portalIfc_indications_0_deq(lToHostOutput_EN_portalIfc_indications_0_deq),
			       .EN_ifc_print(lToHostOutput_EN_ifc_print),
			       .portalIfc_messageSize_size(lToHostOutput_portalIfc_messageSize_size),
			       .RDY_portalIfc_messageSize_size(),
			       .portalIfc_indications_0_first(lToHostOutput_portalIfc_indications_0_first),
			       .RDY_portalIfc_indications_0_first(lToHostOutput_RDY_portalIfc_indications_0_first),
			       .RDY_portalIfc_indications_0_deq(lToHostOutput_RDY_portalIfc_indications_0_deq),
			       .portalIfc_indications_0_notEmpty(lToHostOutput_portalIfc_indications_0_notEmpty),
			       .RDY_portalIfc_indications_0_notEmpty(),
			       .portalIfc_intr_status(),
			       .RDY_portalIfc_intr_status(),
			       .portalIfc_intr_channel(),
			       .RDY_portalIfc_intr_channel(),
			       .RDY_ifc_print());

  // submodule lToHostOutputNoc_fifoMsgSource
  FIFO2 #(.width(32'd32),
	  .guarded(1'd1)) lToHostOutputNoc_fifoMsgSource(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(lToHostOutputNoc_fifoMsgSource_D_IN),
							 .ENQ(lToHostOutputNoc_fifoMsgSource_ENQ),
							 .DEQ(lToHostOutputNoc_fifoMsgSource_DEQ),
							 .CLR(lToHostOutputNoc_fifoMsgSource_CLR),
							 .D_OUT(lToHostOutputNoc_fifoMsgSource_D_OUT),
							 .FULL_N(lToHostOutputNoc_fifoMsgSource_FULL_N),
							 .EMPTY_N(lToHostOutputNoc_fifoMsgSource_EMPTY_N));

  // rule RL_lToHostOutputNoc_sendHeader
  assign WILL_FIRE_RL_lToHostOutputNoc_sendHeader =
	     lToHostOutputNoc_fifoMsgSource_FULL_N &&
	     !lToHostOutputNoc_bpState &&
	     lToHostOutput_portalIfc_indications_0_notEmpty ;

  // rule RL_lToHostOutputNoc_sendMessage
  assign WILL_FIRE_RL_lToHostOutputNoc_sendMessage =
	     lToHostOutputNoc_fifoMsgSource_FULL_N &&
	     (lToHostOutputNoc_methodIdReg != 8'd0 ||
	      lToHostOutput_RDY_portalIfc_indications_0_deq) &&
	     (lToHostOutputNoc_methodIdReg != 8'd0 ||
	      lToHostOutput_RDY_portalIfc_indications_0_first) &&
	     lToHostOutputNoc_bpState ;

  // rule RL_lFromHostInputNoc_receiveMessageHeader
  assign WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader =
	     lFromHostInputNoc_fifoMsgSink_EMPTY_N &&
	     !lFromHostInputNoc_bpState ;

  // rule RL_lFromHostInputNoc_receiveMessage
  assign WILL_FIRE_RL_lFromHostInputNoc_receiveMessage =
	     lFromHostInputNoc_fifoMsgSink_EMPTY_N &&
	     (lFromHostInputNoc_methodIdReg != 8'd0 ||
	      lFromHostInput_RDY_portalIfc_requests_0_enq) &&
	     lFromHostInputNoc_bpState ;

  // inputs to muxes for submodule ports
  assign MUX_lFromHostInputNoc_bpState_write_1__SEL_1 =
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader &&
	     _theResult____h1407 != 8'd0 ;
  assign MUX_lToHostOutputNoc_bpState_write_1__SEL_1 =
	     WILL_FIRE_RL_lToHostOutputNoc_sendMessage &&
	     lToHostOutputNoc_messageWordsReg == 16'd1 ;
  assign MUX_lFromHostInputNoc_messageWordsReg_write_1__VAL_2 =
	     lFromHostInputNoc_messageWordsReg - 8'd1 ;
  assign MUX_lToHostOutputNoc_fifoMsgSource_enq_1__VAL_1 =
	     { methodNumber__h792, x__h902 } ;
  assign MUX_lToHostOutputNoc_messageWordsReg_write_1__VAL_2 =
	     lToHostOutputNoc_messageWordsReg - 16'd1 ;

  // register lFromHostInputNoc_bpState
  assign lFromHostInputNoc_bpState_D_IN =
	     MUX_lFromHostInputNoc_bpState_write_1__SEL_1 ;
  assign lFromHostInputNoc_bpState_EN =
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader &&
	     _theResult____h1407 != 8'd0 ||
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessage &&
	     lFromHostInputNoc_messageWordsReg == 8'd1 ;

  // register lFromHostInputNoc_messageWordsReg
  assign lFromHostInputNoc_messageWordsReg_D_IN =
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader ?
	       _theResult____h1407 :
	       MUX_lFromHostInputNoc_messageWordsReg_write_1__VAL_2 ;
  assign lFromHostInputNoc_messageWordsReg_EN =
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader ||
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessage ;

  // register lFromHostInputNoc_methodIdReg
  assign lFromHostInputNoc_methodIdReg_D_IN =
	     lFromHostInputNoc_fifoMsgSink_D_OUT[23:16] ;
  assign lFromHostInputNoc_methodIdReg_EN =
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader ;

  // register lToHostOutputNoc_bpState
  assign lToHostOutputNoc_bpState_D_IN =
	     !MUX_lToHostOutputNoc_bpState_write_1__SEL_1 ;
  assign lToHostOutputNoc_bpState_EN =
	     WILL_FIRE_RL_lToHostOutputNoc_sendMessage &&
	     lToHostOutputNoc_messageWordsReg == 16'd1 ||
	     WILL_FIRE_RL_lToHostOutputNoc_sendHeader ;

  // register lToHostOutputNoc_messageWordsReg
  assign lToHostOutputNoc_messageWordsReg_D_IN =
	     WILL_FIRE_RL_lToHostOutputNoc_sendHeader ?
	       numWords__h748 :
	       MUX_lToHostOutputNoc_messageWordsReg_write_1__VAL_2 ;
  assign lToHostOutputNoc_messageWordsReg_EN =
	     WILL_FIRE_RL_lToHostOutputNoc_sendHeader ||
	     WILL_FIRE_RL_lToHostOutputNoc_sendMessage ;

  // register lToHostOutputNoc_methodIdReg
  assign lToHostOutputNoc_methodIdReg_D_IN = readyChannel__h555 ;
  assign lToHostOutputNoc_methodIdReg_EN =
	     WILL_FIRE_RL_lToHostOutputNoc_sendHeader ;

  // submodule lFromHostInput
  assign lFromHostInput_portalIfc_messageSize_size_methodNumber = 16'h0 ;
  assign lFromHostInput_portalIfc_requests_0_enq_v =
	     lFromHostInputNoc_fifoMsgSink_D_OUT ;
  assign lFromHostInput_EN_portalIfc_requests_0_enq =
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessage &&
	     lFromHostInputNoc_methodIdReg == 8'd0 ;
  assign lFromHostInput_EN_pipes_startPC_PipeOut_deq =
	     lFromHostInput_RDY_pipes_startPC_PipeOut_deq ;

  // submodule lFromHostInputNoc_fifoMsgSink
  assign lFromHostInputNoc_fifoMsgSink_D_IN = requests_0_message_enq_v ;
  assign lFromHostInputNoc_fifoMsgSink_ENQ = EN_requests_0_message_enq ;
  assign lFromHostInputNoc_fifoMsgSink_DEQ =
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessage ||
	     WILL_FIRE_RL_lFromHostInputNoc_receiveMessageHeader ;
  assign lFromHostInputNoc_fifoMsgSink_CLR = 1'b0 ;

  // submodule lToHostOutput
  assign lToHostOutput_ifc_print_word = 32'h0 ;
  assign lToHostOutput_portalIfc_messageSize_size_methodNumber =
	     methodNumber__h792 ;
  assign lToHostOutput_EN_portalIfc_indications_0_deq =
	     WILL_FIRE_RL_lToHostOutputNoc_sendMessage &&
	     lToHostOutputNoc_methodIdReg == 8'd0 ;
  assign lToHostOutput_EN_ifc_print = 1'b0 ;

  // submodule lToHostOutputNoc_fifoMsgSource
  assign lToHostOutputNoc_fifoMsgSource_D_IN =
	     WILL_FIRE_RL_lToHostOutputNoc_sendHeader ?
	       MUX_lToHostOutputNoc_fifoMsgSource_enq_1__VAL_1 :
	       lToHostOutput_portalIfc_indications_0_first ;
  assign lToHostOutputNoc_fifoMsgSource_ENQ =
	     WILL_FIRE_RL_lToHostOutputNoc_sendHeader ||
	     WILL_FIRE_RL_lToHostOutputNoc_sendMessage ;
  assign lToHostOutputNoc_fifoMsgSource_DEQ = EN_indications_0_message_deq ;
  assign lToHostOutputNoc_fifoMsgSource_CLR = 1'b0 ;

  // remaining internal signals
  assign _theResult____h1407 =
	     (lFromHostInputNoc_fifoMsgSink_D_OUT[7:0] == 8'd1) ?
	       lFromHostInputNoc_fifoMsgSink_D_OUT[7:0] :
	       messageWords__h1406 ;
  assign messageWords__h1406 =
	     lFromHostInputNoc_fifoMsgSink_D_OUT[7:0] - 8'd1 ;
  assign methodNumber__h792 = { 8'd0, readyChannel__h555 } ;
  assign numWords__h748 =
	     { 5'd0, lToHostOutput_portalIfc_messageSize_size[15:5] } +
	     roundup__h747 ;
  assign readyChannel__h555 =
	     lToHostOutput_portalIfc_indications_0_notEmpty ? 8'd0 : 8'd255 ;
  assign roundup__h747 =
	     (lToHostOutput_portalIfc_messageSize_size[4:0] == 5'd0) ?
	       16'd0 :
	       16'd1 ;
  assign x__h902 = numWords__h748 + 16'd1 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        lFromHostInputNoc_bpState <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lFromHostInputNoc_messageWordsReg <= `BSV_ASSIGNMENT_DELAY 8'd0;
	lFromHostInputNoc_methodIdReg <= `BSV_ASSIGNMENT_DELAY 8'd0;
	lToHostOutputNoc_bpState <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lToHostOutputNoc_messageWordsReg <= `BSV_ASSIGNMENT_DELAY 16'd0;
	lToHostOutputNoc_methodIdReg <= `BSV_ASSIGNMENT_DELAY 8'd0;
      end
    else
      begin
        if (lFromHostInputNoc_bpState_EN)
	  lFromHostInputNoc_bpState <= `BSV_ASSIGNMENT_DELAY
	      lFromHostInputNoc_bpState_D_IN;
	if (lFromHostInputNoc_messageWordsReg_EN)
	  lFromHostInputNoc_messageWordsReg <= `BSV_ASSIGNMENT_DELAY
	      lFromHostInputNoc_messageWordsReg_D_IN;
	if (lFromHostInputNoc_methodIdReg_EN)
	  lFromHostInputNoc_methodIdReg <= `BSV_ASSIGNMENT_DELAY
	      lFromHostInputNoc_methodIdReg_D_IN;
	if (lToHostOutputNoc_bpState_EN)
	  lToHostOutputNoc_bpState <= `BSV_ASSIGNMENT_DELAY
	      lToHostOutputNoc_bpState_D_IN;
	if (lToHostOutputNoc_messageWordsReg_EN)
	  lToHostOutputNoc_messageWordsReg <= `BSV_ASSIGNMENT_DELAY
	      lToHostOutputNoc_messageWordsReg_D_IN;
	if (lToHostOutputNoc_methodIdReg_EN)
	  lToHostOutputNoc_methodIdReg <= `BSV_ASSIGNMENT_DELAY
	      lToHostOutputNoc_methodIdReg_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    lFromHostInputNoc_bpState = 1'h0;
    lFromHostInputNoc_messageWordsReg = 8'hAA;
    lFromHostInputNoc_methodIdReg = 8'hAA;
    lToHostOutputNoc_bpState = 1'h0;
    lToHostOutputNoc_messageWordsReg = 16'hAAAA;
    lToHostOutputNoc_methodIdReg = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (lFromHostInput_RDY_pipes_startPC_PipeOut_deq)
	$display("Received software req to start pc\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (lFromHostInput_RDY_pipes_startPC_PipeOut_deq) $fflush(32'h80000001);
  end
  // synopsys translate_on
endmodule  // mkCnocTop

