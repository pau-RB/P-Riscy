//
// Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
//
// On Mon Sep 19 12:49:46 EDT 2022
//
// BVI format method schedule info:
// schedule brAddrCalc  CF ( brAddrCalc );
//
//
// Ports:
// Name                         I/O  size props
// brAddrCalc                     O    32
// brAddrCalc_pc                  I    32
// brAddrCalc_val                 I    32
// brAddrCalc_iType               I     4
// brAddrCalc_imm                 I    32
// brAddrCalc_taken               I     1
//
// Combinational paths from inputs to outputs:
//   (brAddrCalc_pc,
//    brAddrCalc_val,
//    brAddrCalc_iType,
//    brAddrCalc_imm,
//    brAddrCalc_taken) -> brAddrCalc
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module module_brAddrCalc(brAddrCalc_pc,
			 brAddrCalc_val,
			 brAddrCalc_iType,
			 brAddrCalc_imm,
			 brAddrCalc_taken,
			 brAddrCalc);
  // value method brAddrCalc
  input  [31 : 0] brAddrCalc_pc;
  input  [31 : 0] brAddrCalc_val;
  input  [3 : 0] brAddrCalc_iType;
  input  [31 : 0] brAddrCalc_imm;
  input  brAddrCalc_taken;
  output [31 : 0] brAddrCalc;

  // signals for module outputs
  reg [31 : 0] brAddrCalc;

  // remaining internal signals
  wire [31 : 0] brAddrCalc_pc_PLUS_brAddrCalc_imm___d2, pcPlus4__h27, x__h58;

  // value method brAddrCalc
  always@(brAddrCalc_iType or
	  pcPlus4__h27 or
	  brAddrCalc_pc_PLUS_brAddrCalc_imm___d2 or
	  x__h58 or brAddrCalc_taken)
  begin
    case (brAddrCalc_iType)
      4'd4: brAddrCalc = brAddrCalc_pc_PLUS_brAddrCalc_imm___d2;
      4'd5: brAddrCalc = { x__h58[31:1], 1'b0 };
      4'd6:
	  brAddrCalc =
	      brAddrCalc_taken ?
		brAddrCalc_pc_PLUS_brAddrCalc_imm___d2 :
		pcPlus4__h27;
      default: brAddrCalc = pcPlus4__h27;
    endcase
  end

  // remaining internal signals
  assign brAddrCalc_pc_PLUS_brAddrCalc_imm___d2 =
	     brAddrCalc_pc + brAddrCalc_imm ;
  assign pcPlus4__h27 = brAddrCalc_pc + 32'd4 ;
  assign x__h58 = brAddrCalc_val + brAddrCalc_imm ;
endmodule  // module_brAddrCalc

