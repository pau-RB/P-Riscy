//
// Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
//
// On Mon Sep 19 12:52:33 EDT 2022
//
// BVI format method schedule info:
// schedule ifc_print  CF ( ifc_print, inverseIfc_print );
//
// schedule inverseIfc_print  CF ( ifc_print, inverseIfc_print );
//
//
// Ports:
// Name                         I/O  size props
// RDY_ifc_print                  O     1
// inverseIfc_print               O    32
// RDY_inverseIfc_print           O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// ifc_print_word                 I    32
// EN_ifc_print                   I     1
// EN_inverseIfc_print            I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkToHostInverterV(CLK,
			 RST_N,

			 ifc_print_word,
			 EN_ifc_print,
			 RDY_ifc_print,

			 EN_inverseIfc_print,
			 inverseIfc_print,
			 RDY_inverseIfc_print);
  input  CLK;
  input  RST_N;

  // action method ifc_print
  input  [31 : 0] ifc_print_word;
  input  EN_ifc_print;
  output RDY_ifc_print;

  // actionvalue method inverseIfc_print
  input  EN_inverseIfc_print;
  output [31 : 0] inverseIfc_print;
  output RDY_inverseIfc_print;

  // signals for module outputs
  wire [31 : 0] inverseIfc_print;
  wire RDY_ifc_print, RDY_inverseIfc_print;

  // ports of submodule inv_print_inverter
  wire [31 : 0] inv_print_inverter_get, inv_print_inverter_put;
  wire inv_print_inverter_EN_get,
       inv_print_inverter_EN_put,
       inv_print_inverter_RDY_get,
       inv_print_inverter_RDY_put;

  // action method ifc_print
  assign RDY_ifc_print = inv_print_inverter_RDY_put ;

  // actionvalue method inverseIfc_print
  assign inverseIfc_print = inv_print_inverter_get ;
  assign RDY_inverseIfc_print = inv_print_inverter_RDY_get ;

  // submodule inv_print_inverter
  PutInverter #(.DATA_WIDTH(32'd32)) inv_print_inverter(.CLK(CLK),
							.RST(RST_N),
							.put(inv_print_inverter_put),
							.EN_put(inv_print_inverter_EN_put),
							.EN_get(inv_print_inverter_EN_get),
							.RDY_put(inv_print_inverter_RDY_put),
							.get(inv_print_inverter_get),
							.RDY_get(inv_print_inverter_RDY_get));

  // submodule inv_print_inverter
  assign inv_print_inverter_put = ifc_print_word ;
  assign inv_print_inverter_EN_put = EN_ifc_print ;
  assign inv_print_inverter_EN_get = EN_inverseIfc_print ;
endmodule  // mkToHostInverterV

