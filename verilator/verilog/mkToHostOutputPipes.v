//
// Generated by Bluespec Compiler, version 2022.01 (build 066c7a8)
//
// On Mon Sep 19 12:52:33 EDT 2022
//
// BVI format method schedule info:
// schedule methods_print_enq  CF ( portalIfc_messageSize_size,
// 				 portalIfc_indications_0_first,
// 				 portalIfc_indications_0_deq );
// schedule methods_print_enq  C ( methods_print_enq );
//
// schedule methods_print_notFull  CF ( methods_print_notFull,
// 				     portalIfc_messageSize_size,
// 				     portalIfc_indications_0_first,
// 				     portalIfc_indications_0_notEmpty,
// 				     portalIfc_intr_status,
// 				     portalIfc_intr_channel );
// schedule methods_print_notFull  SB ( methods_print_enq,
// 				     portalIfc_indications_0_deq );
//
// schedule portalIfc_messageSize_size  CF ( methods_print_enq,
// 					  methods_print_notFull,
// 					  portalIfc_messageSize_size,
// 					  portalIfc_indications_0_first,
// 					  portalIfc_indications_0_deq,
// 					  portalIfc_indications_0_notEmpty,
// 					  portalIfc_intr_status,
// 					  portalIfc_intr_channel );
//
// schedule portalIfc_indications_0_first  CF ( methods_print_enq,
// 					     methods_print_notFull,
// 					     portalIfc_messageSize_size,
// 					     portalIfc_indications_0_first,
// 					     portalIfc_indications_0_notEmpty,
// 					     portalIfc_intr_status,
// 					     portalIfc_intr_channel );
// schedule portalIfc_indications_0_first  SB ( portalIfc_indications_0_deq );
//
// schedule portalIfc_indications_0_deq  CF ( methods_print_enq,
// 					   portalIfc_messageSize_size );
// schedule portalIfc_indications_0_deq  C ( portalIfc_indications_0_deq );
//
// schedule portalIfc_indications_0_notEmpty  CF ( methods_print_notFull,
// 						portalIfc_messageSize_size,
// 						portalIfc_indications_0_first,
// 						portalIfc_indications_0_notEmpty,
// 						portalIfc_intr_status,
// 						portalIfc_intr_channel );
// schedule portalIfc_indications_0_notEmpty  SB ( methods_print_enq,
// 						portalIfc_indications_0_deq );
//
// schedule portalIfc_intr_status  CF ( methods_print_notFull,
// 				     portalIfc_messageSize_size,
// 				     portalIfc_indications_0_first,
// 				     portalIfc_indications_0_notEmpty,
// 				     portalIfc_intr_status,
// 				     portalIfc_intr_channel );
// schedule portalIfc_intr_status  SB ( methods_print_enq,
// 				     portalIfc_indications_0_deq );
//
// schedule portalIfc_intr_channel  CF ( methods_print_notFull,
// 				      portalIfc_messageSize_size,
// 				      portalIfc_indications_0_first,
// 				      portalIfc_indications_0_notEmpty,
// 				      portalIfc_intr_status,
// 				      portalIfc_intr_channel );
// schedule portalIfc_intr_channel  SB ( methods_print_enq,
// 				      portalIfc_indications_0_deq );
//
//
// Ports:
// Name                         I/O  size props
// RDY_methods_print_enq          O     1
// methods_print_notFull          O     1
// RDY_methods_print_notFull      O     1 const
// portalIfc_messageSize_size     O    16 const
// RDY_portalIfc_messageSize_size  O     1 const
// portalIfc_indications_0_first  O    32 reg
// RDY_portalIfc_indications_0_first  O     1 reg
// RDY_portalIfc_indications_0_deq  O     1 reg
// portalIfc_indications_0_notEmpty  O     1 reg
// RDY_portalIfc_indications_0_notEmpty  O     1 const
// portalIfc_intr_status          O     1 reg
// RDY_portalIfc_intr_status      O     1 const
// portalIfc_intr_channel         O    32
// RDY_portalIfc_intr_channel     O     1 const
// CLK                            I     1 clock
// RST_N                          I     1 reset
// methods_print_enq_v            I    32 reg
// portalIfc_messageSize_size_methodNumber  I    16 unused
// EN_methods_print_enq           I     1
// EN_portalIfc_indications_0_deq  I     1
//
// Combinational paths from inputs to outputs:
//   portalIfc_messageSize_size_methodNumber -> portalIfc_messageSize_size
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkToHostOutputPipes(CLK,
			   RST_N,

			   methods_print_enq_v,
			   EN_methods_print_enq,
			   RDY_methods_print_enq,

			   methods_print_notFull,
			   RDY_methods_print_notFull,

			   portalIfc_messageSize_size_methodNumber,
			   portalIfc_messageSize_size,
			   RDY_portalIfc_messageSize_size,

			   portalIfc_indications_0_first,
			   RDY_portalIfc_indications_0_first,

			   EN_portalIfc_indications_0_deq,
			   RDY_portalIfc_indications_0_deq,

			   portalIfc_indications_0_notEmpty,
			   RDY_portalIfc_indications_0_notEmpty,

			   portalIfc_intr_status,
			   RDY_portalIfc_intr_status,

			   portalIfc_intr_channel,
			   RDY_portalIfc_intr_channel);
  input  CLK;
  input  RST_N;

  // action method methods_print_enq
  input  [31 : 0] methods_print_enq_v;
  input  EN_methods_print_enq;
  output RDY_methods_print_enq;

  // value method methods_print_notFull
  output methods_print_notFull;
  output RDY_methods_print_notFull;

  // value method portalIfc_messageSize_size
  input  [15 : 0] portalIfc_messageSize_size_methodNumber;
  output [15 : 0] portalIfc_messageSize_size;
  output RDY_portalIfc_messageSize_size;

  // value method portalIfc_indications_0_first
  output [31 : 0] portalIfc_indications_0_first;
  output RDY_portalIfc_indications_0_first;

  // action method portalIfc_indications_0_deq
  input  EN_portalIfc_indications_0_deq;
  output RDY_portalIfc_indications_0_deq;

  // value method portalIfc_indications_0_notEmpty
  output portalIfc_indications_0_notEmpty;
  output RDY_portalIfc_indications_0_notEmpty;

  // value method portalIfc_intr_status
  output portalIfc_intr_status;
  output RDY_portalIfc_intr_status;

  // value method portalIfc_intr_channel
  output [31 : 0] portalIfc_intr_channel;
  output RDY_portalIfc_intr_channel;

  // signals for module outputs
  wire [31 : 0] portalIfc_indications_0_first, portalIfc_intr_channel;
  wire [15 : 0] portalIfc_messageSize_size;
  wire RDY_methods_print_enq,
       RDY_methods_print_notFull,
       RDY_portalIfc_indications_0_deq,
       RDY_portalIfc_indications_0_first,
       RDY_portalIfc_indications_0_notEmpty,
       RDY_portalIfc_intr_channel,
       RDY_portalIfc_intr_status,
       RDY_portalIfc_messageSize_size,
       methods_print_notFull,
       portalIfc_indications_0_notEmpty,
       portalIfc_intr_status;

  // register print_responseAdapter_bits
  reg [31 : 0] print_responseAdapter_bits;
  wire [31 : 0] print_responseAdapter_bits_D_IN;
  wire print_responseAdapter_bits_EN;

  // register print_responseAdapter_notEmptyReg
  reg print_responseAdapter_notEmptyReg;
  wire print_responseAdapter_notEmptyReg_D_IN,
       print_responseAdapter_notEmptyReg_EN;

  // register print_responseAdapter_shift
  reg [5 : 0] print_responseAdapter_shift;
  wire [5 : 0] print_responseAdapter_shift_D_IN;
  wire print_responseAdapter_shift_EN;

  // action method methods_print_enq
  assign RDY_methods_print_enq = !print_responseAdapter_notEmptyReg ;

  // value method methods_print_notFull
  assign methods_print_notFull = !print_responseAdapter_notEmptyReg ;
  assign RDY_methods_print_notFull = 1'd1 ;

  // value method portalIfc_messageSize_size
  assign portalIfc_messageSize_size = 16'd32 ;
  assign RDY_portalIfc_messageSize_size = 1'd1 ;

  // value method portalIfc_indications_0_first
  assign portalIfc_indications_0_first = print_responseAdapter_bits ;
  assign RDY_portalIfc_indications_0_first =
	     print_responseAdapter_notEmptyReg ;

  // action method portalIfc_indications_0_deq
  assign RDY_portalIfc_indications_0_deq = print_responseAdapter_notEmptyReg ;

  // value method portalIfc_indications_0_notEmpty
  assign portalIfc_indications_0_notEmpty =
	     print_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_indications_0_notEmpty = 1'd1 ;

  // value method portalIfc_intr_status
  assign portalIfc_intr_status = print_responseAdapter_notEmptyReg ;
  assign RDY_portalIfc_intr_status = 1'd1 ;

  // value method portalIfc_intr_channel
  assign portalIfc_intr_channel =
	     print_responseAdapter_notEmptyReg ? 32'd0 : 32'hFFFFFFFF ;
  assign RDY_portalIfc_intr_channel = 1'd1 ;

  // register print_responseAdapter_bits
  assign print_responseAdapter_bits_D_IN = methods_print_enq_v ;
  assign print_responseAdapter_bits_EN = EN_methods_print_enq ;

  // register print_responseAdapter_notEmptyReg
  assign print_responseAdapter_notEmptyReg_D_IN =
	     !EN_portalIfc_indications_0_deq ;
  assign print_responseAdapter_notEmptyReg_EN =
	     EN_portalIfc_indications_0_deq || EN_methods_print_enq ;

  // register print_responseAdapter_shift
  assign print_responseAdapter_shift_D_IN = 6'h0 ;
  assign print_responseAdapter_shift_EN = 1'b0 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        print_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY 32'd0;
	print_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	print_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY 6'd0;
      end
    else
      begin
        if (print_responseAdapter_bits_EN)
	  print_responseAdapter_bits <= `BSV_ASSIGNMENT_DELAY
	      print_responseAdapter_bits_D_IN;
	if (print_responseAdapter_notEmptyReg_EN)
	  print_responseAdapter_notEmptyReg <= `BSV_ASSIGNMENT_DELAY
	      print_responseAdapter_notEmptyReg_D_IN;
	if (print_responseAdapter_shift_EN)
	  print_responseAdapter_shift <= `BSV_ASSIGNMENT_DELAY
	      print_responseAdapter_shift_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    print_responseAdapter_bits = 32'hAAAAAAAA;
    print_responseAdapter_notEmptyReg = 1'h0;
    print_responseAdapter_shift = 6'h2A;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on
endmodule  // mkToHostOutputPipes

